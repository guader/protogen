// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: i18n/i18n.proto

package i18n

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable *bool   `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
	Suffix *string `protobuf:"bytes,2,opt,name=suffix" json:"suffix,omitempty"`
}

func (x *FileOptions) Reset() {
	*x = FileOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_i18n_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOptions) ProtoMessage() {}

func (x *FileOptions) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_i18n_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOptions.ProtoReflect.Descriptor instead.
func (*FileOptions) Descriptor() ([]byte, []int) {
	return file_i18n_i18n_proto_rawDescGZIP(), []int{0}
}

func (x *FileOptions) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *FileOptions) GetSuffix() string {
	if x != nil && x.Suffix != nil {
		return *x.Suffix
	}
	return ""
}

type EnumOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable *bool `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
}

func (x *EnumOptions) Reset() {
	*x = EnumOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_i18n_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumOptions) ProtoMessage() {}

func (x *EnumOptions) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_i18n_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumOptions.ProtoReflect.Descriptor instead.
func (*EnumOptions) Descriptor() ([]byte, []int) {
	return file_i18n_i18n_proto_rawDescGZIP(), []int{1}
}

func (x *EnumOptions) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

type MessageOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable *bool `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
}

func (x *MessageOptions) Reset() {
	*x = MessageOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_i18n_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOptions) ProtoMessage() {}

func (x *MessageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_i18n_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOptions.ProtoReflect.Descriptor instead.
func (*MessageOptions) Descriptor() ([]byte, []int) {
	return file_i18n_i18n_proto_rawDescGZIP(), []int{2}
}

func (x *MessageOptions) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

// Language codes from: https://www.andiamo.co.uk/resources/iso-language-codes/
type I18N struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Afrikaans
	Af *string `protobuf:"bytes,1,opt,name=af" json:"af,omitempty"`
	// Albanian
	Sq *string `protobuf:"bytes,2,opt,name=sq" json:"sq,omitempty"`
	// Arabic (Algeria)
	ArDz *string `protobuf:"bytes,3,opt,name=ar_dz,json=arDz" json:"ar_dz,omitempty"`
	// Arabic (Bahrain)
	ArBh *string `protobuf:"bytes,4,opt,name=ar_bh,json=arBh" json:"ar_bh,omitempty"`
	// Arabic (Egypt)
	ArEg *string `protobuf:"bytes,5,opt,name=ar_eg,json=arEg" json:"ar_eg,omitempty"`
	// Arabic (Iraq)
	ArIq *string `protobuf:"bytes,6,opt,name=ar_iq,json=arIq" json:"ar_iq,omitempty"`
	// Arabic (Jordan)
	ArJo *string `protobuf:"bytes,7,opt,name=ar_jo,json=arJo" json:"ar_jo,omitempty"`
	// Arabic (Kuwait)
	ArKw *string `protobuf:"bytes,8,opt,name=ar_kw,json=arKw" json:"ar_kw,omitempty"`
	// Arabic (Lebanon)
	ArLb *string `protobuf:"bytes,9,opt,name=ar_lb,json=arLb" json:"ar_lb,omitempty"`
	// Arabic (Libya)
	ArLy *string `protobuf:"bytes,10,opt,name=ar_ly,json=arLy" json:"ar_ly,omitempty"`
	// Arabic (Morocco)
	ArMa *string `protobuf:"bytes,11,opt,name=ar_ma,json=arMa" json:"ar_ma,omitempty"`
	// Arabic (Oman)
	ArOm *string `protobuf:"bytes,12,opt,name=ar_om,json=arOm" json:"ar_om,omitempty"`
	// Arabic (Qatar)
	ArQa *string `protobuf:"bytes,13,opt,name=ar_qa,json=arQa" json:"ar_qa,omitempty"`
	// Arabic (Saudi Arabia)
	ArSa *string `protobuf:"bytes,14,opt,name=ar_sa,json=arSa" json:"ar_sa,omitempty"`
	// Arabic (Syria)
	ArSy *string `protobuf:"bytes,15,opt,name=ar_sy,json=arSy" json:"ar_sy,omitempty"`
	// Arabic (Tunisia)
	ArTn *string `protobuf:"bytes,16,opt,name=ar_tn,json=arTn" json:"ar_tn,omitempty"`
	// Arabic (U.A.E.)
	ArAe *string `protobuf:"bytes,17,opt,name=ar_ae,json=arAe" json:"ar_ae,omitempty"`
	// Arabic (Yemen)
	ArYe *string `protobuf:"bytes,18,opt,name=ar_ye,json=arYe" json:"ar_ye,omitempty"`
	// Basque
	Eu *string `protobuf:"bytes,19,opt,name=eu" json:"eu,omitempty"`
	// Belarusian
	Be *string `protobuf:"bytes,20,opt,name=be" json:"be,omitempty"`
	// Bulgarian
	Bg *string `protobuf:"bytes,21,opt,name=bg" json:"bg,omitempty"`
	// Catalan
	Ca *string `protobuf:"bytes,22,opt,name=ca" json:"ca,omitempty"`
	// Chinese (Hong Kong)
	ZhHk *string `protobuf:"bytes,23,opt,name=zh_hk,json=zhHk" json:"zh_hk,omitempty"`
	// Chinese (PRC)
	ZhCn *string `protobuf:"bytes,24,opt,name=zh_cn,json=zhCn" json:"zh_cn,omitempty"`
	// Chinese (Singapore)
	ZhSg *string `protobuf:"bytes,25,opt,name=zh_sg,json=zhSg" json:"zh_sg,omitempty"`
	// Chinese (Taiwan)
	ZhTw *string `protobuf:"bytes,26,opt,name=zh_tw,json=zhTw" json:"zh_tw,omitempty"`
	// Croatian
	Hr *string `protobuf:"bytes,27,opt,name=hr" json:"hr,omitempty"`
	// Czech
	Cs *string `protobuf:"bytes,28,opt,name=cs" json:"cs,omitempty"`
	// Danish
	Da *string `protobuf:"bytes,29,opt,name=da" json:"da,omitempty"`
	// Dutch (Belgium)
	NlBe *string `protobuf:"bytes,30,opt,name=nl_be,json=nlBe" json:"nl_be,omitempty"`
	// Dutch (Standard)
	Nl *string `protobuf:"bytes,31,opt,name=nl" json:"nl,omitempty"`
	// English
	En *string `protobuf:"bytes,32,opt,name=en" json:"en,omitempty"`
	// English (Australia)
	EnAu *string `protobuf:"bytes,33,opt,name=en_au,json=enAu" json:"en_au,omitempty"`
	// English (Belize)
	EnBz *string `protobuf:"bytes,34,opt,name=en_bz,json=enBz" json:"en_bz,omitempty"`
	// English (Canada)
	EnCa *string `protobuf:"bytes,35,opt,name=en_ca,json=enCa" json:"en_ca,omitempty"`
	// English (Ireland)
	EnIe *string `protobuf:"bytes,36,opt,name=en_ie,json=enIe" json:"en_ie,omitempty"`
	// English (Jamaica)
	EnJm *string `protobuf:"bytes,37,opt,name=en_jm,json=enJm" json:"en_jm,omitempty"`
	// English (New Zealand)
	EnNz *string `protobuf:"bytes,38,opt,name=en_nz,json=enNz" json:"en_nz,omitempty"`
	// English (South Africa)
	EnZa *string `protobuf:"bytes,39,opt,name=en_za,json=enZa" json:"en_za,omitempty"`
	// English (Trinidad)
	EnTt *string `protobuf:"bytes,40,opt,name=en_tt,json=enTt" json:"en_tt,omitempty"`
	// English (United Kingdom)
	EnGb *string `protobuf:"bytes,41,opt,name=en_gb,json=enGb" json:"en_gb,omitempty"`
	// English (United States)
	EnUs *string `protobuf:"bytes,42,opt,name=en_us,json=enUs" json:"en_us,omitempty"`
	// Estonian
	Et *string `protobuf:"bytes,43,opt,name=et" json:"et,omitempty"`
	// Faeroese
	Fo *string `protobuf:"bytes,44,opt,name=fo" json:"fo,omitempty"`
	// Farsi
	Fa *string `protobuf:"bytes,45,opt,name=fa" json:"fa,omitempty"`
	// Finnish
	Fi *string `protobuf:"bytes,46,opt,name=fi" json:"fi,omitempty"`
	// French (Belgium)
	FrBe *string `protobuf:"bytes,47,opt,name=fr_be,json=frBe" json:"fr_be,omitempty"`
	// French (Canada)
	FrCa *string `protobuf:"bytes,48,opt,name=fr_ca,json=frCa" json:"fr_ca,omitempty"`
	// French (Luxembourg)
	FrLu *string `protobuf:"bytes,49,opt,name=fr_lu,json=frLu" json:"fr_lu,omitempty"`
	// French (Standard)
	Fr *string `protobuf:"bytes,50,opt,name=fr" json:"fr,omitempty"`
	// French (Switzerland)
	FrCh *string `protobuf:"bytes,51,opt,name=fr_ch,json=frCh" json:"fr_ch,omitempty"`
	// Gaelic (Scotland)
	Gd *string `protobuf:"bytes,52,opt,name=gd" json:"gd,omitempty"`
	// German (Austria)
	DeAt *string `protobuf:"bytes,53,opt,name=de_at,json=deAt" json:"de_at,omitempty"`
	// German (Liechtenstein)
	DeLi *string `protobuf:"bytes,54,opt,name=de_li,json=deLi" json:"de_li,omitempty"`
	// German (Luxembourg)
	DeLu *string `protobuf:"bytes,55,opt,name=de_lu,json=deLu" json:"de_lu,omitempty"`
	// German (Standard)
	De *string `protobuf:"bytes,56,opt,name=de" json:"de,omitempty"`
	// German (Switzerland)
	DeCh *string `protobuf:"bytes,57,opt,name=de_ch,json=deCh" json:"de_ch,omitempty"`
	// Greek
	El *string `protobuf:"bytes,58,opt,name=el" json:"el,omitempty"`
	// Hebrew
	He *string `protobuf:"bytes,59,opt,name=he" json:"he,omitempty"`
	// Hindi
	Hi *string `protobuf:"bytes,60,opt,name=hi" json:"hi,omitempty"`
	// Hungarian
	Hu *string `protobuf:"bytes,61,opt,name=hu" json:"hu,omitempty"`
	// Icelandic
	Is *string `protobuf:"bytes,62,opt,name=is" json:"is,omitempty"`
	// Indonesian
	Id *string `protobuf:"bytes,63,opt,name=id" json:"id,omitempty"`
	// Irish
	Ga *string `protobuf:"bytes,64,opt,name=ga" json:"ga,omitempty"`
	// Italian (Standard)
	It *string `protobuf:"bytes,65,opt,name=it" json:"it,omitempty"`
	// Italian (Switzerland)
	ItCh *string `protobuf:"bytes,66,opt,name=it_ch,json=itCh" json:"it_ch,omitempty"`
	// Japanese
	Ja *string `protobuf:"bytes,67,opt,name=ja" json:"ja,omitempty"`
	// Korean
	Ko *string `protobuf:"bytes,68,opt,name=ko" json:"ko,omitempty"`
	// Korean (Johab)
	//
	//	optional string ko = 69;
	//
	// Kurdish
	Ku *string `protobuf:"bytes,70,opt,name=ku" json:"ku,omitempty"`
	// Latvian
	Lv *string `protobuf:"bytes,71,opt,name=lv" json:"lv,omitempty"`
	// Lithuanian
	Lt *string `protobuf:"bytes,72,opt,name=lt" json:"lt,omitempty"`
	// Macedonian (FYROM)
	Mk *string `protobuf:"bytes,73,opt,name=mk" json:"mk,omitempty"`
	// Malayalam
	Ml *string `protobuf:"bytes,74,opt,name=ml" json:"ml,omitempty"`
	// Malaysian
	Ms *string `protobuf:"bytes,75,opt,name=ms" json:"ms,omitempty"`
	// Maltese
	Mt *string `protobuf:"bytes,76,opt,name=mt" json:"mt,omitempty"`
	// Norwegian
	No *string `protobuf:"bytes,77,opt,name=no" json:"no,omitempty"`
	// Norwegian (Bokmål)
	Nb *string `protobuf:"bytes,78,opt,name=nb" json:"nb,omitempty"`
	// Norwegian (Nynorsk)
	Nn *string `protobuf:"bytes,79,opt,name=nn" json:"nn,omitempty"`
	// Polish
	Pl *string `protobuf:"bytes,80,opt,name=pl" json:"pl,omitempty"`
	// Portuguese (Brazil)
	PtBr *string `protobuf:"bytes,81,opt,name=pt_br,json=ptBr" json:"pt_br,omitempty"`
	// Portuguese (Portugal)
	Pt *string `protobuf:"bytes,82,opt,name=pt" json:"pt,omitempty"`
	// Punjabi
	Pa *string `protobuf:"bytes,83,opt,name=pa" json:"pa,omitempty"`
	// Rhaeto-Romanic
	Rm *string `protobuf:"bytes,84,opt,name=rm" json:"rm,omitempty"`
	// Romanian
	Ro *string `protobuf:"bytes,85,opt,name=ro" json:"ro,omitempty"`
	// Romanian (Republic of Moldova)
	RoMd *string `protobuf:"bytes,86,opt,name=ro_md,json=roMd" json:"ro_md,omitempty"`
	// Russian
	Ru *string `protobuf:"bytes,87,opt,name=ru" json:"ru,omitempty"`
	// Russian (Republic of Moldova)
	RuMd *string `protobuf:"bytes,88,opt,name=ru_md,json=ruMd" json:"ru_md,omitempty"`
	// Serbian
	Sr *string `protobuf:"bytes,89,opt,name=sr" json:"sr,omitempty"`
	// Slovak
	Sk *string `protobuf:"bytes,90,opt,name=sk" json:"sk,omitempty"`
	// Slovenian
	Sl *string `protobuf:"bytes,91,opt,name=sl" json:"sl,omitempty"`
	// Sorbian
	Sb *string `protobuf:"bytes,92,opt,name=sb" json:"sb,omitempty"`
	// Spanish (Argentina)
	EsAr *string `protobuf:"bytes,93,opt,name=es_ar,json=esAr" json:"es_ar,omitempty"`
	// Spanish (Bolivia)
	EsBo *string `protobuf:"bytes,94,opt,name=es_bo,json=esBo" json:"es_bo,omitempty"`
	// Spanish (Chile)
	EsCl *string `protobuf:"bytes,95,opt,name=es_cl,json=esCl" json:"es_cl,omitempty"`
	// Spanish (Colombia)
	EsCo *string `protobuf:"bytes,96,opt,name=es_co,json=esCo" json:"es_co,omitempty"`
	// Spanish (Costa Rica)
	EsCr *string `protobuf:"bytes,97,opt,name=es_cr,json=esCr" json:"es_cr,omitempty"`
	// Spanish (Dominican Republic)
	EsDo *string `protobuf:"bytes,98,opt,name=es_do,json=esDo" json:"es_do,omitempty"`
	// Spanish (Ecuador)
	EsEc *string `protobuf:"bytes,99,opt,name=es_ec,json=esEc" json:"es_ec,omitempty"`
	// Spanish (El Salvador)
	EsSv *string `protobuf:"bytes,100,opt,name=es_sv,json=esSv" json:"es_sv,omitempty"`
	// Spanish (Guatemala)
	EsGt *string `protobuf:"bytes,101,opt,name=es_gt,json=esGt" json:"es_gt,omitempty"`
	// Spanish (Honduras)
	EsHn *string `protobuf:"bytes,102,opt,name=es_hn,json=esHn" json:"es_hn,omitempty"`
	// Spanish (Mexico)
	EsMx *string `protobuf:"bytes,103,opt,name=es_mx,json=esMx" json:"es_mx,omitempty"`
	// Spanish (Nicaragua)
	EsNi *string `protobuf:"bytes,104,opt,name=es_ni,json=esNi" json:"es_ni,omitempty"`
	// Spanish (Panama)
	EsPa *string `protobuf:"bytes,105,opt,name=es_pa,json=esPa" json:"es_pa,omitempty"`
	// Spanish (Paraguay)
	EsPy *string `protobuf:"bytes,106,opt,name=es_py,json=esPy" json:"es_py,omitempty"`
	// Spanish (Peru)
	EsPe *string `protobuf:"bytes,107,opt,name=es_pe,json=esPe" json:"es_pe,omitempty"`
	// Spanish (Puerto Rico)
	EsPr *string `protobuf:"bytes,108,opt,name=es_pr,json=esPr" json:"es_pr,omitempty"`
	// Spanish (Spain)
	Es *string `protobuf:"bytes,109,opt,name=es" json:"es,omitempty"`
	// Spanish (Uruguay)
	EsUy *string `protobuf:"bytes,110,opt,name=es_uy,json=esUy" json:"es_uy,omitempty"`
	// Spanish (Venezuela)
	EsVe *string `protobuf:"bytes,111,opt,name=es_ve,json=esVe" json:"es_ve,omitempty"`
	// Swedish
	Sv *string `protobuf:"bytes,112,opt,name=sv" json:"sv,omitempty"`
	// Swedish (Finland)
	SvFi *string `protobuf:"bytes,113,opt,name=sv_fi,json=svFi" json:"sv_fi,omitempty"`
	// Thai
	Th *string `protobuf:"bytes,114,opt,name=th" json:"th,omitempty"`
	// Tsonga
	Ts *string `protobuf:"bytes,115,opt,name=ts" json:"ts,omitempty"`
	// Tswana
	Tn *string `protobuf:"bytes,116,opt,name=tn" json:"tn,omitempty"`
	// Turkish
	Tr *string `protobuf:"bytes,117,opt,name=tr" json:"tr,omitempty"`
	// Ukrainian
	Ua *string `protobuf:"bytes,118,opt,name=ua" json:"ua,omitempty"`
	// Urdu
	Ur *string `protobuf:"bytes,119,opt,name=ur" json:"ur,omitempty"`
	// Venda
	Ve *string `protobuf:"bytes,120,opt,name=ve" json:"ve,omitempty"`
	// Vietnamese
	Vi *string `protobuf:"bytes,121,opt,name=vi" json:"vi,omitempty"`
	// Welsh
	Cy *string `protobuf:"bytes,122,opt,name=cy" json:"cy,omitempty"`
	// Xhosa
	Xh *string `protobuf:"bytes,123,opt,name=xh" json:"xh,omitempty"`
	// Yiddish
	Ji *string `protobuf:"bytes,124,opt,name=ji" json:"ji,omitempty"`
	// Zulu
	Zu *string `protobuf:"bytes,125,opt,name=zu" json:"zu,omitempty"`
}

func (x *I18N) Reset() {
	*x = I18N{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_i18n_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *I18N) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*I18N) ProtoMessage() {}

func (x *I18N) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_i18n_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use I18N.ProtoReflect.Descriptor instead.
func (*I18N) Descriptor() ([]byte, []int) {
	return file_i18n_i18n_proto_rawDescGZIP(), []int{3}
}

func (x *I18N) GetAf() string {
	if x != nil && x.Af != nil {
		return *x.Af
	}
	return ""
}

func (x *I18N) GetSq() string {
	if x != nil && x.Sq != nil {
		return *x.Sq
	}
	return ""
}

func (x *I18N) GetArDz() string {
	if x != nil && x.ArDz != nil {
		return *x.ArDz
	}
	return ""
}

func (x *I18N) GetArBh() string {
	if x != nil && x.ArBh != nil {
		return *x.ArBh
	}
	return ""
}

func (x *I18N) GetArEg() string {
	if x != nil && x.ArEg != nil {
		return *x.ArEg
	}
	return ""
}

func (x *I18N) GetArIq() string {
	if x != nil && x.ArIq != nil {
		return *x.ArIq
	}
	return ""
}

func (x *I18N) GetArJo() string {
	if x != nil && x.ArJo != nil {
		return *x.ArJo
	}
	return ""
}

func (x *I18N) GetArKw() string {
	if x != nil && x.ArKw != nil {
		return *x.ArKw
	}
	return ""
}

func (x *I18N) GetArLb() string {
	if x != nil && x.ArLb != nil {
		return *x.ArLb
	}
	return ""
}

func (x *I18N) GetArLy() string {
	if x != nil && x.ArLy != nil {
		return *x.ArLy
	}
	return ""
}

func (x *I18N) GetArMa() string {
	if x != nil && x.ArMa != nil {
		return *x.ArMa
	}
	return ""
}

func (x *I18N) GetArOm() string {
	if x != nil && x.ArOm != nil {
		return *x.ArOm
	}
	return ""
}

func (x *I18N) GetArQa() string {
	if x != nil && x.ArQa != nil {
		return *x.ArQa
	}
	return ""
}

func (x *I18N) GetArSa() string {
	if x != nil && x.ArSa != nil {
		return *x.ArSa
	}
	return ""
}

func (x *I18N) GetArSy() string {
	if x != nil && x.ArSy != nil {
		return *x.ArSy
	}
	return ""
}

func (x *I18N) GetArTn() string {
	if x != nil && x.ArTn != nil {
		return *x.ArTn
	}
	return ""
}

func (x *I18N) GetArAe() string {
	if x != nil && x.ArAe != nil {
		return *x.ArAe
	}
	return ""
}

func (x *I18N) GetArYe() string {
	if x != nil && x.ArYe != nil {
		return *x.ArYe
	}
	return ""
}

func (x *I18N) GetEu() string {
	if x != nil && x.Eu != nil {
		return *x.Eu
	}
	return ""
}

func (x *I18N) GetBe() string {
	if x != nil && x.Be != nil {
		return *x.Be
	}
	return ""
}

func (x *I18N) GetBg() string {
	if x != nil && x.Bg != nil {
		return *x.Bg
	}
	return ""
}

func (x *I18N) GetCa() string {
	if x != nil && x.Ca != nil {
		return *x.Ca
	}
	return ""
}

func (x *I18N) GetZhHk() string {
	if x != nil && x.ZhHk != nil {
		return *x.ZhHk
	}
	return ""
}

func (x *I18N) GetZhCn() string {
	if x != nil && x.ZhCn != nil {
		return *x.ZhCn
	}
	return ""
}

func (x *I18N) GetZhSg() string {
	if x != nil && x.ZhSg != nil {
		return *x.ZhSg
	}
	return ""
}

func (x *I18N) GetZhTw() string {
	if x != nil && x.ZhTw != nil {
		return *x.ZhTw
	}
	return ""
}

func (x *I18N) GetHr() string {
	if x != nil && x.Hr != nil {
		return *x.Hr
	}
	return ""
}

func (x *I18N) GetCs() string {
	if x != nil && x.Cs != nil {
		return *x.Cs
	}
	return ""
}

func (x *I18N) GetDa() string {
	if x != nil && x.Da != nil {
		return *x.Da
	}
	return ""
}

func (x *I18N) GetNlBe() string {
	if x != nil && x.NlBe != nil {
		return *x.NlBe
	}
	return ""
}

func (x *I18N) GetNl() string {
	if x != nil && x.Nl != nil {
		return *x.Nl
	}
	return ""
}

func (x *I18N) GetEn() string {
	if x != nil && x.En != nil {
		return *x.En
	}
	return ""
}

func (x *I18N) GetEnAu() string {
	if x != nil && x.EnAu != nil {
		return *x.EnAu
	}
	return ""
}

func (x *I18N) GetEnBz() string {
	if x != nil && x.EnBz != nil {
		return *x.EnBz
	}
	return ""
}

func (x *I18N) GetEnCa() string {
	if x != nil && x.EnCa != nil {
		return *x.EnCa
	}
	return ""
}

func (x *I18N) GetEnIe() string {
	if x != nil && x.EnIe != nil {
		return *x.EnIe
	}
	return ""
}

func (x *I18N) GetEnJm() string {
	if x != nil && x.EnJm != nil {
		return *x.EnJm
	}
	return ""
}

func (x *I18N) GetEnNz() string {
	if x != nil && x.EnNz != nil {
		return *x.EnNz
	}
	return ""
}

func (x *I18N) GetEnZa() string {
	if x != nil && x.EnZa != nil {
		return *x.EnZa
	}
	return ""
}

func (x *I18N) GetEnTt() string {
	if x != nil && x.EnTt != nil {
		return *x.EnTt
	}
	return ""
}

func (x *I18N) GetEnGb() string {
	if x != nil && x.EnGb != nil {
		return *x.EnGb
	}
	return ""
}

func (x *I18N) GetEnUs() string {
	if x != nil && x.EnUs != nil {
		return *x.EnUs
	}
	return ""
}

func (x *I18N) GetEt() string {
	if x != nil && x.Et != nil {
		return *x.Et
	}
	return ""
}

func (x *I18N) GetFo() string {
	if x != nil && x.Fo != nil {
		return *x.Fo
	}
	return ""
}

func (x *I18N) GetFa() string {
	if x != nil && x.Fa != nil {
		return *x.Fa
	}
	return ""
}

func (x *I18N) GetFi() string {
	if x != nil && x.Fi != nil {
		return *x.Fi
	}
	return ""
}

func (x *I18N) GetFrBe() string {
	if x != nil && x.FrBe != nil {
		return *x.FrBe
	}
	return ""
}

func (x *I18N) GetFrCa() string {
	if x != nil && x.FrCa != nil {
		return *x.FrCa
	}
	return ""
}

func (x *I18N) GetFrLu() string {
	if x != nil && x.FrLu != nil {
		return *x.FrLu
	}
	return ""
}

func (x *I18N) GetFr() string {
	if x != nil && x.Fr != nil {
		return *x.Fr
	}
	return ""
}

func (x *I18N) GetFrCh() string {
	if x != nil && x.FrCh != nil {
		return *x.FrCh
	}
	return ""
}

func (x *I18N) GetGd() string {
	if x != nil && x.Gd != nil {
		return *x.Gd
	}
	return ""
}

func (x *I18N) GetDeAt() string {
	if x != nil && x.DeAt != nil {
		return *x.DeAt
	}
	return ""
}

func (x *I18N) GetDeLi() string {
	if x != nil && x.DeLi != nil {
		return *x.DeLi
	}
	return ""
}

func (x *I18N) GetDeLu() string {
	if x != nil && x.DeLu != nil {
		return *x.DeLu
	}
	return ""
}

func (x *I18N) GetDe() string {
	if x != nil && x.De != nil {
		return *x.De
	}
	return ""
}

func (x *I18N) GetDeCh() string {
	if x != nil && x.DeCh != nil {
		return *x.DeCh
	}
	return ""
}

func (x *I18N) GetEl() string {
	if x != nil && x.El != nil {
		return *x.El
	}
	return ""
}

func (x *I18N) GetHe() string {
	if x != nil && x.He != nil {
		return *x.He
	}
	return ""
}

func (x *I18N) GetHi() string {
	if x != nil && x.Hi != nil {
		return *x.Hi
	}
	return ""
}

func (x *I18N) GetHu() string {
	if x != nil && x.Hu != nil {
		return *x.Hu
	}
	return ""
}

func (x *I18N) GetIs() string {
	if x != nil && x.Is != nil {
		return *x.Is
	}
	return ""
}

func (x *I18N) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *I18N) GetGa() string {
	if x != nil && x.Ga != nil {
		return *x.Ga
	}
	return ""
}

func (x *I18N) GetIt() string {
	if x != nil && x.It != nil {
		return *x.It
	}
	return ""
}

func (x *I18N) GetItCh() string {
	if x != nil && x.ItCh != nil {
		return *x.ItCh
	}
	return ""
}

func (x *I18N) GetJa() string {
	if x != nil && x.Ja != nil {
		return *x.Ja
	}
	return ""
}

func (x *I18N) GetKo() string {
	if x != nil && x.Ko != nil {
		return *x.Ko
	}
	return ""
}

func (x *I18N) GetKu() string {
	if x != nil && x.Ku != nil {
		return *x.Ku
	}
	return ""
}

func (x *I18N) GetLv() string {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return ""
}

func (x *I18N) GetLt() string {
	if x != nil && x.Lt != nil {
		return *x.Lt
	}
	return ""
}

func (x *I18N) GetMk() string {
	if x != nil && x.Mk != nil {
		return *x.Mk
	}
	return ""
}

func (x *I18N) GetMl() string {
	if x != nil && x.Ml != nil {
		return *x.Ml
	}
	return ""
}

func (x *I18N) GetMs() string {
	if x != nil && x.Ms != nil {
		return *x.Ms
	}
	return ""
}

func (x *I18N) GetMt() string {
	if x != nil && x.Mt != nil {
		return *x.Mt
	}
	return ""
}

func (x *I18N) GetNo() string {
	if x != nil && x.No != nil {
		return *x.No
	}
	return ""
}

func (x *I18N) GetNb() string {
	if x != nil && x.Nb != nil {
		return *x.Nb
	}
	return ""
}

func (x *I18N) GetNn() string {
	if x != nil && x.Nn != nil {
		return *x.Nn
	}
	return ""
}

func (x *I18N) GetPl() string {
	if x != nil && x.Pl != nil {
		return *x.Pl
	}
	return ""
}

func (x *I18N) GetPtBr() string {
	if x != nil && x.PtBr != nil {
		return *x.PtBr
	}
	return ""
}

func (x *I18N) GetPt() string {
	if x != nil && x.Pt != nil {
		return *x.Pt
	}
	return ""
}

func (x *I18N) GetPa() string {
	if x != nil && x.Pa != nil {
		return *x.Pa
	}
	return ""
}

func (x *I18N) GetRm() string {
	if x != nil && x.Rm != nil {
		return *x.Rm
	}
	return ""
}

func (x *I18N) GetRo() string {
	if x != nil && x.Ro != nil {
		return *x.Ro
	}
	return ""
}

func (x *I18N) GetRoMd() string {
	if x != nil && x.RoMd != nil {
		return *x.RoMd
	}
	return ""
}

func (x *I18N) GetRu() string {
	if x != nil && x.Ru != nil {
		return *x.Ru
	}
	return ""
}

func (x *I18N) GetRuMd() string {
	if x != nil && x.RuMd != nil {
		return *x.RuMd
	}
	return ""
}

func (x *I18N) GetSr() string {
	if x != nil && x.Sr != nil {
		return *x.Sr
	}
	return ""
}

func (x *I18N) GetSk() string {
	if x != nil && x.Sk != nil {
		return *x.Sk
	}
	return ""
}

func (x *I18N) GetSl() string {
	if x != nil && x.Sl != nil {
		return *x.Sl
	}
	return ""
}

func (x *I18N) GetSb() string {
	if x != nil && x.Sb != nil {
		return *x.Sb
	}
	return ""
}

func (x *I18N) GetEsAr() string {
	if x != nil && x.EsAr != nil {
		return *x.EsAr
	}
	return ""
}

func (x *I18N) GetEsBo() string {
	if x != nil && x.EsBo != nil {
		return *x.EsBo
	}
	return ""
}

func (x *I18N) GetEsCl() string {
	if x != nil && x.EsCl != nil {
		return *x.EsCl
	}
	return ""
}

func (x *I18N) GetEsCo() string {
	if x != nil && x.EsCo != nil {
		return *x.EsCo
	}
	return ""
}

func (x *I18N) GetEsCr() string {
	if x != nil && x.EsCr != nil {
		return *x.EsCr
	}
	return ""
}

func (x *I18N) GetEsDo() string {
	if x != nil && x.EsDo != nil {
		return *x.EsDo
	}
	return ""
}

func (x *I18N) GetEsEc() string {
	if x != nil && x.EsEc != nil {
		return *x.EsEc
	}
	return ""
}

func (x *I18N) GetEsSv() string {
	if x != nil && x.EsSv != nil {
		return *x.EsSv
	}
	return ""
}

func (x *I18N) GetEsGt() string {
	if x != nil && x.EsGt != nil {
		return *x.EsGt
	}
	return ""
}

func (x *I18N) GetEsHn() string {
	if x != nil && x.EsHn != nil {
		return *x.EsHn
	}
	return ""
}

func (x *I18N) GetEsMx() string {
	if x != nil && x.EsMx != nil {
		return *x.EsMx
	}
	return ""
}

func (x *I18N) GetEsNi() string {
	if x != nil && x.EsNi != nil {
		return *x.EsNi
	}
	return ""
}

func (x *I18N) GetEsPa() string {
	if x != nil && x.EsPa != nil {
		return *x.EsPa
	}
	return ""
}

func (x *I18N) GetEsPy() string {
	if x != nil && x.EsPy != nil {
		return *x.EsPy
	}
	return ""
}

func (x *I18N) GetEsPe() string {
	if x != nil && x.EsPe != nil {
		return *x.EsPe
	}
	return ""
}

func (x *I18N) GetEsPr() string {
	if x != nil && x.EsPr != nil {
		return *x.EsPr
	}
	return ""
}

func (x *I18N) GetEs() string {
	if x != nil && x.Es != nil {
		return *x.Es
	}
	return ""
}

func (x *I18N) GetEsUy() string {
	if x != nil && x.EsUy != nil {
		return *x.EsUy
	}
	return ""
}

func (x *I18N) GetEsVe() string {
	if x != nil && x.EsVe != nil {
		return *x.EsVe
	}
	return ""
}

func (x *I18N) GetSv() string {
	if x != nil && x.Sv != nil {
		return *x.Sv
	}
	return ""
}

func (x *I18N) GetSvFi() string {
	if x != nil && x.SvFi != nil {
		return *x.SvFi
	}
	return ""
}

func (x *I18N) GetTh() string {
	if x != nil && x.Th != nil {
		return *x.Th
	}
	return ""
}

func (x *I18N) GetTs() string {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return ""
}

func (x *I18N) GetTn() string {
	if x != nil && x.Tn != nil {
		return *x.Tn
	}
	return ""
}

func (x *I18N) GetTr() string {
	if x != nil && x.Tr != nil {
		return *x.Tr
	}
	return ""
}

func (x *I18N) GetUa() string {
	if x != nil && x.Ua != nil {
		return *x.Ua
	}
	return ""
}

func (x *I18N) GetUr() string {
	if x != nil && x.Ur != nil {
		return *x.Ur
	}
	return ""
}

func (x *I18N) GetVe() string {
	if x != nil && x.Ve != nil {
		return *x.Ve
	}
	return ""
}

func (x *I18N) GetVi() string {
	if x != nil && x.Vi != nil {
		return *x.Vi
	}
	return ""
}

func (x *I18N) GetCy() string {
	if x != nil && x.Cy != nil {
		return *x.Cy
	}
	return ""
}

func (x *I18N) GetXh() string {
	if x != nil && x.Xh != nil {
		return *x.Xh
	}
	return ""
}

func (x *I18N) GetJi() string {
	if x != nil && x.Ji != nil {
		return *x.Ji
	}
	return ""
}

func (x *I18N) GetZu() string {
	if x != nil && x.Zu != nil {
		return *x.Zu
	}
	return ""
}

var file_i18n_i18n_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*FileOptions)(nil),
		Field:         1334,
		Name:          "i18n.fileOptions",
		Tag:           "bytes,1334,opt,name=fileOptions",
		Filename:      "i18n/i18n.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*EnumOptions)(nil),
		Field:         1334,
		Name:          "i18n.enumOptions",
		Tag:           "bytes,1334,opt,name=enumOptions",
		Filename:      "i18n/i18n.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageOptions)(nil),
		Field:         1334,
		Name:          "i18n.messageOptions",
		Tag:           "bytes,1334,opt,name=messageOptions",
		Filename:      "i18n/i18n.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*I18N)(nil),
		Field:         1334,
		Name:          "i18n.enum",
		Tag:           "bytes,1334,opt,name=enum",
		Filename:      "i18n/i18n.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional i18n.FileOptions fileOptions = 1334;
	E_FileOptions = &file_i18n_i18n_proto_extTypes[0] // Extension number not registered yet.
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional i18n.EnumOptions enumOptions = 1334;
	E_EnumOptions = &file_i18n_i18n_proto_extTypes[1] // Extension number not registered yet.
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional i18n.MessageOptions messageOptions = 1334;
	E_MessageOptions = &file_i18n_i18n_proto_extTypes[2] // Extension number not registered yet.
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional i18n.I18n enum = 1334;
	E_Enum = &file_i18n_i18n_proto_extTypes[3] // Extension number not registered yet.
)

var File_i18n_i18n_proto protoreflect.FileDescriptor

var file_i18n_i18n_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x69, 0x31, 0x38, 0x6e, 0x2f, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x69, 0x31, 0x38, 0x6e, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x0b, 0x46, 0x69, 0x6c,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x22, 0x25, 0x0a, 0x0b, 0x45, 0x6e, 0x75, 0x6d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x28, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xfc, 0x11, 0x0a, 0x04, 0x49, 0x31,
	0x38, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x61, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x73, 0x71, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x72, 0x5f, 0x64, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x72, 0x44, 0x7a, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x72, 0x5f, 0x62, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x42, 0x68, 0x12, 0x13, 0x0a, 0x05,
	0x61, 0x72, 0x5f, 0x65, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x45,
	0x67, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x72, 0x5f, 0x69, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x72, 0x49, 0x71, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x72, 0x5f, 0x6a, 0x6f, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x4a, 0x6f, 0x12, 0x13, 0x0a, 0x05, 0x61,
	0x72, 0x5f, 0x6b, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x4b, 0x77,
	0x12, 0x13, 0x0a, 0x05, 0x61, 0x72, 0x5f, 0x6c, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x72, 0x4c, 0x62, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x72, 0x5f, 0x6c, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x4c, 0x79, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x72,
	0x5f, 0x6d, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x4d, 0x61, 0x12,
	0x13, 0x0a, 0x05, 0x61, 0x72, 0x5f, 0x6f, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x72, 0x4f, 0x6d, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x72, 0x5f, 0x71, 0x61, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x51, 0x61, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x72, 0x5f,
	0x73, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x53, 0x61, 0x12, 0x13,
	0x0a, 0x05, 0x61, 0x72, 0x5f, 0x73, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x72, 0x53, 0x79, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x72, 0x5f, 0x74, 0x6e, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x54, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x72, 0x5f, 0x61,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x41, 0x65, 0x12, 0x13, 0x0a,
	0x05, 0x61, 0x72, 0x5f, 0x79, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72,
	0x59, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x75, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x65, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x62, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x67, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x62, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x61, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x63, 0x61, 0x12, 0x13, 0x0a, 0x05, 0x7a, 0x68, 0x5f, 0x68, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x7a, 0x68, 0x48, 0x6b, 0x12, 0x13, 0x0a, 0x05, 0x7a, 0x68, 0x5f, 0x63, 0x6e,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x68, 0x43, 0x6e, 0x12, 0x13, 0x0a, 0x05,
	0x7a, 0x68, 0x5f, 0x73, 0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x68, 0x53,
	0x67, 0x12, 0x13, 0x0a, 0x05, 0x7a, 0x68, 0x5f, 0x74, 0x77, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x7a, 0x68, 0x54, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x72, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x68, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x73, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x63, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x61, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x64, 0x61, 0x12, 0x13, 0x0a, 0x05, 0x6e, 0x6c, 0x5f, 0x62, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6c, 0x42, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6e,
	0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x65,
	0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x65,
	0x6e, 0x5f, 0x61, 0x75, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x6e, 0x41, 0x75,
	0x12, 0x13, 0x0a, 0x05, 0x65, 0x6e, 0x5f, 0x62, 0x7a, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x65, 0x6e, 0x42, 0x7a, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x6e, 0x5f, 0x63, 0x61, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x6e, 0x43, 0x61, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x6e,
	0x5f, 0x69, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x6e, 0x49, 0x65, 0x12,
	0x13, 0x0a, 0x05, 0x65, 0x6e, 0x5f, 0x6a, 0x6d, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x65, 0x6e, 0x4a, 0x6d, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x6e, 0x5f, 0x6e, 0x7a, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x6e, 0x4e, 0x7a, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x6e, 0x5f,
	0x7a, 0x61, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x6e, 0x5a, 0x61, 0x12, 0x13,
	0x0a, 0x05, 0x65, 0x6e, 0x5f, 0x74, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65,
	0x6e, 0x54, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x6e, 0x5f, 0x67, 0x62, 0x18, 0x29, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x65, 0x6e, 0x47, 0x62, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x6e, 0x5f, 0x75,
	0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x6e, 0x55, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x65, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x66, 0x6f, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x66, 0x61, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x66, 0x69, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66, 0x69, 0x12, 0x13, 0x0a,
	0x05, 0x66, 0x72, 0x5f, 0x62, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x42, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x66, 0x72, 0x5f, 0x63, 0x61, 0x18, 0x30, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x72, 0x43, 0x61, 0x12, 0x13, 0x0a, 0x05, 0x66, 0x72, 0x5f, 0x6c, 0x75,
	0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x4c, 0x75, 0x12, 0x0e, 0x0a, 0x02,
	0x66, 0x72, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66, 0x72, 0x12, 0x13, 0x0a, 0x05,
	0x66, 0x72, 0x5f, 0x63, 0x68, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x43,
	0x68, 0x12, 0x0e, 0x0a, 0x02, 0x67, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x67,
	0x64, 0x12, 0x13, 0x0a, 0x05, 0x64, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x18,
	0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x4c, 0x69, 0x12, 0x13, 0x0a, 0x05, 0x64,
	0x65, 0x5f, 0x6c, 0x75, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x4c, 0x75,
	0x12, 0x0e, 0x0a, 0x02, 0x64, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x65,
	0x12, 0x13, 0x0a, 0x05, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x43, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x6c, 0x18, 0x3a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x68, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x69, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x68, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x75, 0x18, 0x3d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x68, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x73, 0x18, 0x3e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x3f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x67, 0x61, 0x18, 0x40, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x67, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x74, 0x18, 0x41, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x74, 0x5f, 0x63, 0x68, 0x18, 0x42,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x74, 0x43, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x61,
	0x18, 0x43, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6a, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x6b, 0x6f,
	0x18, 0x44, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6b, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x6b, 0x75,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6b, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x76,
	0x18, 0x47, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6c, 0x76, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x74,
	0x18, 0x48, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x6b,
	0x18, 0x49, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x6c,
	0x18, 0x4a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x73,
	0x18, 0x4b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x74,
	0x18, 0x4c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f,
	0x18, 0x4d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x62,
	0x18, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6e,
	0x18, 0x4f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6c,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6c, 0x12, 0x13, 0x0a, 0x05, 0x70, 0x74,
	0x5f, 0x62, 0x72, 0x18, 0x51, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x74, 0x42, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x70, 0x74, 0x18, 0x52, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x70, 0x61, 0x18, 0x53, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x72, 0x6d, 0x18, 0x54, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x72, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x72, 0x6f, 0x18, 0x55, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x72, 0x6f, 0x12,
	0x13, 0x0a, 0x05, 0x72, 0x6f, 0x5f, 0x6d, 0x64, 0x18, 0x56, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x4d, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x75, 0x18, 0x57, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x72, 0x75, 0x12, 0x13, 0x0a, 0x05, 0x72, 0x75, 0x5f, 0x6d, 0x64, 0x18, 0x58, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x4d, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x72, 0x18,
	0x59, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6b, 0x18,
	0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6c, 0x18,
	0x5b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x62, 0x18,
	0x5c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x62, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x73, 0x5f,
	0x61, 0x72, 0x18, 0x5d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x73, 0x41, 0x72, 0x12, 0x13,
	0x0a, 0x05, 0x65, 0x73, 0x5f, 0x62, 0x6f, 0x18, 0x5e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65,
	0x73, 0x42, 0x6f, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x73, 0x5f, 0x63, 0x6c, 0x18, 0x5f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x65, 0x73, 0x43, 0x6c, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x73, 0x5f, 0x63,
	0x6f, 0x18, 0x60, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x73, 0x43, 0x6f, 0x12, 0x13, 0x0a,
	0x05, 0x65, 0x73, 0x5f, 0x63, 0x72, 0x18, 0x61, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x73,
	0x43, 0x72, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x73, 0x5f, 0x64, 0x6f, 0x18, 0x62, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x65, 0x73, 0x44, 0x6f, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x73, 0x5f, 0x65, 0x63,
	0x18, 0x63, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x73, 0x45, 0x63, 0x12, 0x13, 0x0a, 0x05,
	0x65, 0x73, 0x5f, 0x73, 0x76, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x73, 0x53,
	0x76, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x73, 0x5f, 0x67, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x65, 0x73, 0x47, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x73, 0x5f, 0x68, 0x6e, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x73, 0x48, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x65,
	0x73, 0x5f, 0x6d, 0x78, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x73, 0x4d, 0x78,
	0x12, 0x13, 0x0a, 0x05, 0x65, 0x73, 0x5f, 0x6e, 0x69, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x65, 0x73, 0x4e, 0x69, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x73, 0x50, 0x61, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x73,
	0x5f, 0x70, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x73, 0x50, 0x79, 0x12,
	0x13, 0x0a, 0x05, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x65, 0x73, 0x50, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x18, 0x6c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x73, 0x50, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x73, 0x18,
	0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x73, 0x5f,
	0x75, 0x79, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x73, 0x55, 0x79, 0x12, 0x13,
	0x0a, 0x05, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65,
	0x73, 0x56, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x76, 0x18, 0x70, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x73, 0x76, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x76, 0x5f, 0x66, 0x69, 0x18, 0x71, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x76, 0x46, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x68, 0x18, 0x72,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x73,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6e, 0x18, 0x74,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x72, 0x18, 0x75,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x61, 0x18, 0x76,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x75, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x72, 0x18, 0x77,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x75, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x65, 0x18, 0x78,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x69, 0x18, 0x79,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x79, 0x18, 0x7a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x78, 0x68, 0x18, 0x7b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x78, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x69, 0x18, 0x7c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6a, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x75, 0x18, 0x7d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x75, 0x3a, 0x52, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb6, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69,
	0x31, 0x38, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x0b, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x52, 0x0a, 0x0b,
	0x65, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb6, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x3a, 0x5e, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xb6, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x31, 0x38,
	0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x3a, 0x42, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb6, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x49, 0x31, 0x38, 0x6e, 0x52, 0x04,
	0x65, 0x6e, 0x75, 0x6d, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x67, 0x75, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x65, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x69, 0x31, 0x38, 0x6e,
}

var (
	file_i18n_i18n_proto_rawDescOnce sync.Once
	file_i18n_i18n_proto_rawDescData = file_i18n_i18n_proto_rawDesc
)

func file_i18n_i18n_proto_rawDescGZIP() []byte {
	file_i18n_i18n_proto_rawDescOnce.Do(func() {
		file_i18n_i18n_proto_rawDescData = protoimpl.X.CompressGZIP(file_i18n_i18n_proto_rawDescData)
	})
	return file_i18n_i18n_proto_rawDescData
}

var file_i18n_i18n_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_i18n_i18n_proto_goTypes = []interface{}{
	(*FileOptions)(nil),                   // 0: i18n.FileOptions
	(*EnumOptions)(nil),                   // 1: i18n.EnumOptions
	(*MessageOptions)(nil),                // 2: i18n.MessageOptions
	(*I18N)(nil),                          // 3: i18n.I18n
	(*descriptorpb.FileOptions)(nil),      // 4: google.protobuf.FileOptions
	(*descriptorpb.EnumOptions)(nil),      // 5: google.protobuf.EnumOptions
	(*descriptorpb.MessageOptions)(nil),   // 6: google.protobuf.MessageOptions
	(*descriptorpb.EnumValueOptions)(nil), // 7: google.protobuf.EnumValueOptions
}
var file_i18n_i18n_proto_depIdxs = []int32{
	4, // 0: i18n.fileOptions:extendee -> google.protobuf.FileOptions
	5, // 1: i18n.enumOptions:extendee -> google.protobuf.EnumOptions
	6, // 2: i18n.messageOptions:extendee -> google.protobuf.MessageOptions
	7, // 3: i18n.enum:extendee -> google.protobuf.EnumValueOptions
	0, // 4: i18n.fileOptions:type_name -> i18n.FileOptions
	1, // 5: i18n.enumOptions:type_name -> i18n.EnumOptions
	2, // 6: i18n.messageOptions:type_name -> i18n.MessageOptions
	3, // 7: i18n.enum:type_name -> i18n.I18n
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	4, // [4:8] is the sub-list for extension type_name
	0, // [0:4] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_i18n_i18n_proto_init() }
func file_i18n_i18n_proto_init() {
	if File_i18n_i18n_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_i18n_i18n_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_i18n_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_i18n_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_i18n_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*I18N); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_i18n_i18n_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 4,
			NumServices:   0,
		},
		GoTypes:           file_i18n_i18n_proto_goTypes,
		DependencyIndexes: file_i18n_i18n_proto_depIdxs,
		MessageInfos:      file_i18n_i18n_proto_msgTypes,
		ExtensionInfos:    file_i18n_i18n_proto_extTypes,
	}.Build()
	File_i18n_i18n_proto = out.File
	file_i18n_i18n_proto_rawDesc = nil
	file_i18n_i18n_proto_goTypes = nil
	file_i18n_i18n_proto_depIdxs = nil
}
