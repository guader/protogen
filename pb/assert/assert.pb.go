// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: assert/assert.proto

package assert

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enable        *bool                  `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
	Suffix        *string                `protobuf:"bytes,2,opt,name=suffix" json:"suffix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileOptions) Reset() {
	*x = FileOptions{}
	mi := &file_assert_assert_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOptions) ProtoMessage() {}

func (x *FileOptions) ProtoReflect() protoreflect.Message {
	mi := &file_assert_assert_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOptions.ProtoReflect.Descriptor instead.
func (*FileOptions) Descriptor() ([]byte, []int) {
	return file_assert_assert_proto_rawDescGZIP(), []int{0}
}

func (x *FileOptions) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *FileOptions) GetSuffix() string {
	if x != nil && x.Suffix != nil {
		return *x.Suffix
	}
	return ""
}

type MessageOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enable        *bool                  `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageOptions) Reset() {
	*x = MessageOptions{}
	mi := &file_assert_assert_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOptions) ProtoMessage() {}

func (x *MessageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_assert_assert_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOptions.ProtoReflect.Descriptor instead.
func (*MessageOptions) Descriptor() ([]byte, []int) {
	return file_assert_assert_proto_rawDescGZIP(), []int{1}
}

func (x *MessageOptions) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

var file_assert_assert_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*FileOptions)(nil),
		Field:         1338,
		Name:          "assert.fileOptions",
		Tag:           "bytes,1338,opt,name=fileOptions",
		Filename:      "assert/assert.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageOptions)(nil),
		Field:         1338,
		Name:          "assert.messageOptions",
		Tag:           "bytes,1338,opt,name=messageOptions",
		Filename:      "assert/assert.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional assert.FileOptions fileOptions = 1338;
	E_FileOptions = &file_assert_assert_proto_extTypes[0] // Extension number not registered yet.
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional assert.MessageOptions messageOptions = 1338;
	E_MessageOptions = &file_assert_assert_proto_extTypes[1] // Extension number not registered yet.
)

var File_assert_assert_proto protoreflect.FileDescriptor

const file_assert_assert_proto_rawDesc = "" +
	"\n" +
	"\x13assert/assert.proto\x12\x06assert\x1a google/protobuf/descriptor.proto\"=\n" +
	"\vFileOptions\x12\x16\n" +
	"\x06enable\x18\x01 \x01(\bR\x06enable\x12\x16\n" +
	"\x06suffix\x18\x02 \x01(\tR\x06suffix\"(\n" +
	"\x0eMessageOptions\x12\x16\n" +
	"\x06enable\x18\x01 \x01(\bR\x06enable:T\n" +
	"\vfileOptions\x12\x1c.google.protobuf.FileOptions\x18\xba\n" +
	" \x01(\v2\x13.assert.FileOptionsR\vfileOptions:`\n" +
	"\x0emessageOptions\x12\x1f.google.protobuf.MessageOptions\x18\xba\n" +
	" \x01(\v2\x16.assert.MessageOptionsR\x0emessageOptionsB&Z$github.com/guader/protogen/pb/assert"

var (
	file_assert_assert_proto_rawDescOnce sync.Once
	file_assert_assert_proto_rawDescData []byte
)

func file_assert_assert_proto_rawDescGZIP() []byte {
	file_assert_assert_proto_rawDescOnce.Do(func() {
		file_assert_assert_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_assert_assert_proto_rawDesc), len(file_assert_assert_proto_rawDesc)))
	})
	return file_assert_assert_proto_rawDescData
}

var file_assert_assert_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_assert_assert_proto_goTypes = []any{
	(*FileOptions)(nil),                 // 0: assert.FileOptions
	(*MessageOptions)(nil),              // 1: assert.MessageOptions
	(*descriptorpb.FileOptions)(nil),    // 2: google.protobuf.FileOptions
	(*descriptorpb.MessageOptions)(nil), // 3: google.protobuf.MessageOptions
}
var file_assert_assert_proto_depIdxs = []int32{
	2, // 0: assert.fileOptions:extendee -> google.protobuf.FileOptions
	3, // 1: assert.messageOptions:extendee -> google.protobuf.MessageOptions
	0, // 2: assert.fileOptions:type_name -> assert.FileOptions
	1, // 3: assert.messageOptions:type_name -> assert.MessageOptions
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	2, // [2:4] is the sub-list for extension type_name
	0, // [0:2] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_assert_assert_proto_init() }
func file_assert_assert_proto_init() {
	if File_assert_assert_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_assert_assert_proto_rawDesc), len(file_assert_assert_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_assert_assert_proto_goTypes,
		DependencyIndexes: file_assert_assert_proto_depIdxs,
		MessageInfos:      file_assert_assert_proto_msgTypes,
		ExtensionInfos:    file_assert_assert_proto_extTypes,
	}.Build()
	File_assert_assert_proto = out.File
	file_assert_assert_proto_goTypes = nil
	file_assert_assert_proto_depIdxs = nil
}
